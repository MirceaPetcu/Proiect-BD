--12
--1) Afisati toate salilie de fitness ce au clienti cu abonamente premium
--si numarul strazii din adresa sali este egal numarul sali cu  numarul strazii din adresa salii unde exista cel putin un angajat prenumele "Mircea
select sf.*
from sala_de_fitness sf, lista_clienti lc, clienti c, este_detinut e,abonament_premium ap
where sf.lista_clienti_id = lc.lista_clienti_id and lc.lista_clienti_id = c.lista_clienti_id and c.client_id = e.client_id and 
e.abonament_id = ap.abonament_id
order by 2;
-- am folosit join, ordonare

--2 afisati suma salariilor angajatilor din fiecare departament,ce au cel putin 1 angjati si contin sirul "ie" in componenta numelui departamentului si
--au acelasi nume cu departamentul cu id-ul 64 si se gaseste angajut cu id-ul 72 si departamentul apartine de lista de departamente cu id-ul 59
select sum(a.salariu),d.nume_departament,count(a.angajat_id)
from   departament d,angajat a
where  a.departament_id = d.departament_id and d.nume_departament like ('%ie%') 
group by d.nume_departament
having count(a.angajat_id) >= 1;
-- grupări de date, funcții grup, filtrare la nivel de grupuri,filtrare la nivel de linii
--3 Sa se afiseze id-ul listei de clienti, orasele in care extista salile de fitness si denumirile lor ce se afla la aceasi adresa in care se afla si sala ce are id-ul adresei  84
select l.oras,sf.denumire,sf.lista_clienti_id
from sala_de_fitness sf, locatie l, adresa a
where sf.locatie_id = l.locatie_id and l.locatie_id = a.locatie_id and  a.adresa_id in (select a2.adresa_id
                                                                                        from sala_de_fitness sf2, locatie l2, adresa a2
                                                                                        where sf2.locatie_id = l2.locatie_id and l2.locatie_id = a2.locatie_id
                                                                                        and a2.adresa_id between 85 and 87);
                                                                                        
--subereri nesincronizate

--4 Afisati numele angajatului cu litere mari sau daca numele este null afisati 'nu are nume' si lungimea numelui sau 0 daca este null si id-ul departamentului
--care se gaseste in multimea departamentelor care se termina in 'ie'.
with aux as (select departament_id did
        from departament 
        where nume_departament like('%ie'))
select  upper(nvl(a.nume,'nu are nume')),nvl(length(a.nume),0),d.departament_id,
decode(length(a.nume),5,'bun',4,'foarte bun','rau')
from angajat a, departament d,aux  ax
where a.departament_id = d.departament_id and d.departament_id in ax.did;
--with, 2 functii pentru siruri de caractere,nvl
--5
-- Afisati cand se termina abonamentul cu add_months, ultima zi din luna in care se termina, numele clientului si 'nume mic' pentru nume de 4 carcartere, 'nume mediu' pentru nume
-- de 5 caractere si 'nume mare' pentru 6 pentu clienti ce au lungimea numelei egal cu numele clientilor cu lungime de 4 si cu acelasi abonament ca acestia
select add_months(ab.data_inceput,1),last_day(ab.data_sfarsit),c.nume,
case length(c.nume)
when 4 then 'nume mic'
when 5 then 'nume mediu'
when 6 then 'nume mare'
end
from clienti c, este_detinut ed, abonament ab
where c.client_id = ed.client_id and ab.abonament_id = ed.abonament_id and c.client_id  in (select c2.client_id
                                                                                            from clienti c2, abonament ab2,este_detinut ed2
                                                                                            where c2.client_id = ed2.client_id and ab2.abonament_id = ed2.abonament_id and
                                                                                            length(c2.nume) = length(c.nume) and ab2.abonament_id = ab.abonament_id
                                                                                            and length(c2.nume) = 4);
                                                                                            
--case, 2 functii calendaristice, subcerere sincronizata
commit;
--13
update supliment
set denumire = 'BCAA'
where supliment_id in (select supliment_id
                        from supliment
                        where lower(denumire) = 'taurina');
                        
delete from supliment
where denumire in (select a.denumire
                        from supliment a
                        where pret < 100);-- 2 randuri sterse
update aparat_fitness
set pret = 10000
where denumire in (select denumire
                    from aparat_fitness
                    where aparat_fitness_id in (20,21,22));-- 3 randuri modificate
rollback;